# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
      
    - name: checkout github
      uses: actions/checkout@v2

    - name: Grant execute permission for gradlew
      run: |
        chmod +x ./server/gradlew
        chmod +x ./statistics/gradlew

    - name: install kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: "v1.25.9"
      id: install


# aws 권한 세팅 (aws configure 팀 키값)

    - name: configure aws check
      run: |
        echo "${{ secrets.AWS_ACCESS_KEY_ID }}"
        echo "${{ secrets.AWS_SECRET_ACCESS_KEY }}"

    - name: configure aws
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: update cluster information
      run: aws eks update-kubeconfig --name alioth --region ap-northeast-2

    - name: Login to ECR
      uses: aws-actions/amazon-ecr-login@v1

    - name: Determine the new image tag
      id: newtag
      run: |
        REPOSITORY=kip
        REGISTRY=471112897563.dkr.ecr.ap-northeast-2.amazonaws.com
        LATEST_TAG=$(aws ecr describe-images --repository-name $REPOSITORY --query 'sort_by(imageDetails,& imagePushedAt)[-1].imageTags[0]' --output text)
        NEW_TAG=$((LATEST_TAG + 1))
        echo "New Image Tag: $NEW_TAG"
        echo "::set-output name=tag::$NEW_TAG"

    - name: Set JWT
      run: |
        mkdir -p src/main/resources
        echo "${{ secrets.FCM_CREDENTIALS }}" | base64 --decode > src/main/resources/kip-fcm-firebase-adminsdk-gm80d-6a9b5bbd58.json
        find src
        echo "${{ secrets.JWT_YML }}" | base64 --decode > src/main/resources/jwt.yml
        find src

    - name: Build and push docker image to ecr
      env:
        REGISTRY: 471112897563.dkr.ecr.ap-northeast-2.amazonaws.com
        REPOSITORY: kip
      run: |
        IMAGE_TAG=${{ steps.newtag.outputs.tag }}
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -f Dockerfile .
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

    # kubectl rollout restart deployment kip-backend
    - name: eks kubectl apply
      run: |
        kubectl apply -f ./k8s/kip-backend-depl-serv.yml
        kubectl rollout restart deployment kip-backend


